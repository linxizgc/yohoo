<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yohoo.system.dao.FtxFileMapper">
    <resultMap id="BaseResultMap" type="com.yohoo.system.bo.FtxFileBo">
        <id column="file_id" property="fileId" jdbcType="VARCHAR"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="suffix" property="suffix" jdbcType="VARCHAR"/>
        <result column="size" property="size" jdbcType="INTEGER"/>
        <result column="full_path" property="fullPath" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        file_id, file_name, suffix, size, full_path, description, create_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yohoo.system.po.FtxFileExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ftx_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ftx_file
        where file_id = #{fileId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from ftx_file
        where file_id = #{fileId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.yohoo.system.po.FtxFileExample">
        delete from ftx_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yohoo.system.po.FtxFile">
        insert into ftx_file (file_id, file_name, suffix,
        size, full_path, description,
        create_time)
        values (#{fileId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR},
        #{size,jdbcType=INTEGER}, #{fullPath,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.yohoo.system.po.FtxFile">
        insert into ftx_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="suffix != null">
                suffix,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="fullPath != null">
                full_path,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="suffix != null">
                #{suffix,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=INTEGER},
            </if>
            <if test="fullPath != null">
                #{fullPath,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yohoo.system.po.FtxFileExample" resultType="java.lang.Integer">
        select count(*) from ftx_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ftx_file
        <set>
            <if test="record.fileId != null">
                file_id = #{record.fileId,jdbcType=VARCHAR},
            </if>
            <if test="record.fileName != null">
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.suffix != null">
                suffix = #{record.suffix,jdbcType=VARCHAR},
            </if>
            <if test="record.size != null">
                size = #{record.size,jdbcType=INTEGER},
            </if>
            <if test="record.fullPath != null">
                full_path = #{record.fullPath,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ftx_file
        set file_id = #{record.fileId,jdbcType=VARCHAR},
        file_name = #{record.fileName,jdbcType=VARCHAR},
        suffix = #{record.suffix,jdbcType=VARCHAR},
        size = #{record.size,jdbcType=INTEGER},
        full_path = #{record.fullPath,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yohoo.system.po.FtxFile">
        update ftx_file
        <set>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="suffix != null">
                suffix = #{suffix,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=INTEGER},
            </if>
            <if test="fullPath != null">
                full_path = #{fullPath,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yohoo.system.po.FtxFile">
    update ftx_file
    set file_name = #{fileName,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      full_path = #{fullPath,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
</mapper>